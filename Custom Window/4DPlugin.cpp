/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : Custom Window
 #	author : miyako
 #	2017/01/27
 #
 # --------------------------------------------------------------------------------*/

#include "4DPlugin.h"

void PluginMain(PA_long32 selector, PA_PluginParameters params)
{
	try
	{
        switch(selector)
        {
                // --- Custom Window
                
            case 1 :
                ___SET_WINDOW_TRANSPARENT(params);
                break;
        }
	}
	catch(...)
	{

	}
}

// --------------------------------- Custom Window --------------------------------

NSWindow *PA_GetWindowRef64(int winId)
{
	//EX_GET_HWND has been fixed in 15R3 to return a NSWindow* on mac 64bit.
	//http://forums.4d.fr/Post/EN/15872830/1/17032044
	
	PA_ulong32 version = (PA_Get4DVersion/*ThreadSafe*/() & 0x0000FFFF);
	//	int minor = version & 0x000F;
	int r = (version & 0x00F0) >> 4;
	int major = (version & 0xFF00) >> 8;
	
	if (((major >=0x15) && (r >= 3)) || (major >=0x16))
	{
		return (NSWindow *)PA_GetWindowPtr(reinterpret_cast<NSWindow *>(winId));
	}
	return 0;
}

void SET_WINDOW_TRANSPARENT(sLONG_PTR *pResult, PackagePtr pParams)
{
#if CGFLOAT_IS_DOUBLE
    C_LONGINT Param1;
    Param1.fromParamAtIndex(pParams, 1);
    //https://www.cocoawithlove.com/2008/12/drawing-custom-window-on-mac-os-x.html
    NSWindow *window = PA_GetWindowRef64(Param1.getIntValue());
    if(window)
    {
        [window setBackgroundColor:[NSColor clearColor]];
        [window setOpaque:NO];
        // [window setStyleMask:NSBorderlessWindowMask];
    }
#endif
}

void ___SET_WINDOW_TRANSPARENT(PA_PluginParameters params)
{
    sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
    PackagePtr pParams = (PackagePtr)params->fParameters;
    SET_WINDOW_TRANSPARENT(pResult, pParams);
}
